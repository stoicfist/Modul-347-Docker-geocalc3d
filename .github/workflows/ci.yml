name: CI â€“ PR & Push Validation

on:
  push:
    branches: [ main, master ]
    paths:
      - '.github/workflows/**'
      - '.gitmodules'
      - 'geocalc-frontend'
      - 'geocalc-backend'
  pull_request:
    branches: [ main, master ]
    paths:
      - '.github/workflows/**'
      - '.gitmodules'
      - 'geocalc-frontend'
      - 'geocalc-backend'

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend-tests:
    name: Backend â€“ tests & package
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: geocalc-backend
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Temurin JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      # Falls dein mvnw im Backend-Root liegt und das Modul peter.ngo.geocalc3d heiÃŸt:
      - name: Test & verify
        run: ./mvnw -B -ntp -pl peter.ngo.geocalc3d -am clean verify

      - name: Package (skip tests)
        run: ./mvnw -B -ntp -pl peter.ngo.geocalc3d -am -DskipTests package

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-tests
          path: |
            geocalc-backend/**/target/surefire-reports/**
            geocalc-backend/**/target/failsafe-reports/**
            geocalc-backend/**/target/site/**
          if-no-files-found: ignore

      - name: Upload JAR
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: geocalc-backend/peter.ngo.geocalc3d/target/*.jar
          if-no-files-found: warn

  frontend-build:
    name: Frontend â€“ lint, test, build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: geocalc-frontend
    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          cache-dependency-path: geocalc-frontend/package-lock.json

      - name: Install deps
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Setup Chrome (for Karma)
        uses: browser-actions/setup-chrome@v1

      - name: Unit tests (ChromeHeadless)
        env:
          CHROME_BIN: ${{ env.CHROME_PATH }}
        run: npm test -- --watch=false --browsers=ChromeHeadless --code-coverage

      - name: Build (prod)
        run: npm run build -- --configuration=production

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: geocalc-frontend/coverage/**
          if-no-files-found: ignore

      - name: Upload web-dist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-dist
          path: geocalc-frontend/dist/**
          if-no-files-found: warn

  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-build]
    steps:
      - name: Build run summary
        run: |
          echo "## âœ… CI Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Backend**: tests & package â€“ status: ${{ needs.backend-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Frontend**: lint, tests, build â€“ status: ${{ needs.frontend-build.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¦ Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- backend-tests"  >> $GITHUB_STEP_SUMMARY
          echo "- backend-jar"    >> $GITHUB_STEP_SUMMARY
          echo "- frontend-coverage" >> $GITHUB_STEP_SUMMARY
          echo "- web-dist"       >> $GITHUB_STEP_SUMMARY
